@model MVCProject.Models.EditPostViewModel
@using System.Collections.Generic
@{
    ViewBag.Title = "Edit";

}
@section MainContent{
    <div class="main-content">
        <h2>Edit</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Post</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PostId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="col-md-10">
                            @{var TagList = Model.Tags.Select(t => new SelectListItem { Text = t.TagName, Value = t.TagId.ToString() });
                            var item = new SelectListItem { Text = "Not Selected", Value = "-1" };
                            var ActiveList = new List<SelectListItem>();
                            ActiveList.Add(item);
                            ActiveList.AddRange(TagList);
                            }

                            @Html.DropDownListFor(m => m.SelectedDelTagId, ActiveList)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AvailableTags, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{var list = Model.AvailableTags.Select(t => new SelectListItem { Text = t.TagName, Value = t.TagId.ToString() });

                        var list2 = new List<SelectListItem>();
                        list2.Add(item);
                        list2.AddRange(list);
                        }

                        @Html.DropDownListFor(m => m.SelectedTagId, list2)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}
